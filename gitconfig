[alias]
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  ignored = !git ls-files -v $(git rev-parse --show-toplevel) | grep '^[[:lower:]]'
  hours = !git log --committer='KtorZ' --pretty="%cd" | cut -d' ' -f4 | cut -d: -f1 | sort -n | uniq -c
  hasktags = !hasktags -c $(find . -type f -name '*.hs' ! -path '*.stack-work*' ! -path '*dist-newstyle*')
  root = rev-parse --show-toplevel
  changelog = !git log --reverse --pretty='format:- :round_pushpin: **%s**%n  %b' $(git merge-base HEAD origin/master)..HEAD
  branch-prune = !git branch --merged | grep -v $(git rev-parse --abbrev-ref HEAD) | xargs git branch -d
  tree = !git ls-tree -r --name-only HEAD | tree --fromfile

[commit]
  gpgsign = true # Always sign commits with GPG key

[credential]
  helper = osxkeychain

[core]
  editor = vim
  excludesfile = $HOME/.gitignore
  pager = nvim -R +:AnsiEsc

[rerere] # Reuse Reorderd Resolution:
  enabled = true  # Re-apply same conflicts resolutions to successive commits

[help]
  autocorrect = 1 # Automatically infer commands from typos (mostly safe)

[merge]
  tool = vimdiff # Use vimdiff with 'git mergetool'
  conflictstyle=diff3 # 3-way diff with Local vs Parent vs Remote

[mergetool]
  prompt = false # Donâ€™t prompt before each invocation of the merge resolution program

[pull]
  ff = only # Only pull if merge can be done fast-forwardly

[push]
  default = nothing # Make sure we specify to which remote and branch we should push
  pushOption = force-with-lease=origin # Force push only if the remote is what we expect it to be

[url "git@github.com:"]
  insteadOf = https://github.com/ # Rewrite HTTPS url to always use SSH

[user]
  name = KtorZ
  email = matthias.benkort@gmail.com
  signingkey = F77F4277
